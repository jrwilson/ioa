Use C++?

table
=====
* Unit tests
* Hash index

ueioa
=====
* Memory allocation - Modify malloc and friends so we can associate memory with an automaton and free it when the automaton is destroyed.
* Threading

Probably need to move to separate runqs for each thread.
Purging the runq should be unnecessary if we check the runnable before executing.
This is predicated on aid's not be reused too fast.
As an alternative, one could destroy an automaton by 1) inhibiting the automaton so all existence checks fail, 2) inserting a flush token in all runqs, 3) destroy the automaton when the final flush token has been processed.

* Write unit tests for buffers.  See the tests folder.

automan
=======
* Move hashtable to table

* Code coverage tests ?
* Test for memory leaks

mftp
====
* Add fragment cache so requests can be answered locally
* Factor out matcher and match_getter

ccm
===
* Simple Channel Demo
  * Find free ramp
  * Find free display
  * Build channel

Add discovery for channels
Create component containers
Add discovery to component container
Check for output-before-composed violations in port_manager, port, and friends.
